@page "/createguestbookentry"
@using System.IO
@using BazorProject.Shared
@using System.Text.Json;
@inject HttpClient Http
@using Microsoft.Extensions.Logging

<h1>Neuer Eintrag</h1>
<label>
    Dein Name:
    <input @bind="name" />
</label>
<br>
<label>
    Schreibe eine Nachricht:
    <input @bind="message" />
</label>
<br>
<label>
    Lade ein Bild hoch (15 MB max):
    <br>
    <InputFile id="filePicker" OnChange="@loadFile" />
</label>
<br>
<button @onclick="createEntry">Hinzufügen</button>
<br>
<br>
<label id="success" hidden="@successHidden">
    Eintrag erfolgreich angelegt!
</label>
<label id="failure" hidden="@failureHidden">
    @failureMessage
</label>

@code {
    IBrowserFile selectedFile;

    private async Task loadFile(InputFileChangeEventArgs e)
    {
        selectedFile = e.GetMultipleFiles().FirstOrDefault();
        this.StateHasChanged();
    }

    private string name = "";
    private string message = "";
    private bool successHidden { get; set; } = true;
    private bool failureHidden { get; set; } = true;
    private string failureMessage { get; set; } = "";

    private async Task createEntry()
    {
        try
        {

            if (string.IsNullOrEmpty(name) || string.IsNullOrEmpty(message))
            {
                failureHidden = false;
                failureMessage = "Name und Nachricht müssen gesetzt sein!";
                return;
            }

            failureHidden = true;
            long maxFileSize = 1024 * 1024 * 15;
            var uploadFile = false;

            using var content = new MultipartFormDataContent();

            if (selectedFile != null && selectedFile.Size < maxFileSize)
            {
                var fileContent = new StreamContent(selectedFile.OpenReadStream(maxFileSize));

                content.Add(
                content: fileContent,
                name: "\"files\"",
                fileName: selectedFile.Name);

                uploadFile = true;
            }

            IList<UploadResult> newUploadResults = null;
            if (uploadFile)
            {
                var response = await Http.PostAsync("/Filesave", content);

                newUploadResults = await response.Content
                    .ReadFromJsonAsync<IList<UploadResult>>();
            }

            GuestbookEntry entry = new GuestbookEntry
            {
                Name = name,
                Message = message,
                Date = DateTime.Now,
                PathToFile = newUploadResults?.FirstOrDefault()?.Path
            };

            var stringContent = new StringContent(JsonSerializer.Serialize(entry), System.Text.Encoding.UTF8, "application/json");
            var response2 = await Http.PostAsync("Guestbook/Save", stringContent);
            successHidden = false;
            cleanup();
            this.StateHasChanged();
        }
        catch (Exception e)
        {
            failureHidden = false;
            failureMessage = e.Message;
        }
    }

    private void cleanup()
    {
        message = "";
        name = "";
        selectedFile = null;
    }
}